#!/usr/bin/env ruby
#####
# Copyright (c) 2013 by Sigimera Ltd.
# All rights reserved.
#####
require 'rubygems'
require 'optparse'
require 'json'

begin
  require "gitjira"
rescue LoadError => e
  STDERR.puts "Install the missing library:\n\t \e[0;36m$\e[m \e[0;32mgem install gitjira\e[m"
  exit
end

options = { :force => false }

opt_parser = OptionParser.new do |opt|
  opt.banner = "Usage: git-jira [COMMANDS] [OPTIONS]"
  opt.separator  ""
  opt.separator  "Commands"
  opt.separator  "     init:          setup the current repository to be able to connect to a JIRA project"
  opt.separator  "     list:          returns a list of branches with related issue information"
  opt.separator  "     describe:      verbose issue information related to the current branch"
  opt.separator  ""

  opt.on("-h", "--help", "help") do
    STDOUT.puts opt_parser
    exit
  end

  opt.on("-v", "--version", "print out current Version number") do
    STDOUT.puts "gitjira-#{Gitjira::VERSION}"
    exit
  end

  opt.on("-f", "--force", "force overwrite of .git/config [gitjira] block") do
    options[:force] = true
  end
end

opt_parser.parse!

case ARGV[0]
when "init"
  Gitjira::Setup.init(options[:force])
when "list"
  unless Gitjira::Setup.setup?
    STDERR.puts "[SETUP] This repository is not setup correcly, please execute: `git-jira init`"
    exit
  end
  begin
    Gitjira::InformationFetching.branches
  rescue => e
    STDERR.puts "[ERROR] Not able to fetch feature branch information from JIRA, through exception: #{e}"
  end
when "describe"
   Gitjira::InformationFetching.describe
else
  STDOUT.puts opt_parser
end
